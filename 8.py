import numpy as np

def largestProductInSeries(adjacent, series):
	currentAdjacent = []

	largestProduct = 1
	largestProductStartingIndex = 0
	for index, value in enumerate(series):
		value = int(value)
		if index >= adjacent:
			currentAdjacent = currentAdjacent[1:]
		currentAdjacent.append(value)
		currentProduct = np.product(currentAdjacent)
		if (currentProduct > largestProduct):
			largestProduct = currentProduct
			largestProductStartingIndex = index - (adjacent - 1)
	return (series[largestProductStartingIndex: largestProductStartingIndex + adjacent], largestProduct)

series =  "73167176531330624919225119674426574742355349194934"
series += "96983520312774506326239578318016984801869478851843"
series += "85861560789112949495459501737958331952853208805511"
series += "12540698747158523863050715693290963295227443043557"
series += "66896648950445244523161731856403098711121722383113"
series += "62229893423380308135336276614282806444486645238749"
series += "30358907296290491560440772390713810515859307960866"
series += "70172427121883998797908792274921901699720888093776"
series += "65727333001053367881220235421809751254540594752243"
series += "52584907711670556013604839586446706324415722155397"
series += "53697817977846174064955149290862569321978468622482"
series += "83972241375657056057490261407972968652414535100474"
series += "82166370484403199890008895243450658541227588666881"
series += "16427171479924442928230863465674813919123162824586"
series += "17866458359124566529476545682848912883142607690042"
series += "24219022671055626321111109370544217506941658960408"
series += "07198403850962455444362981230987879927244284909188"
series += "84580156166097919133875499200524063689912560717606"
series += "05886116467109405077541002256983155200055935729725"
series += "71636269561882670428252483600823257530420752963450"

print largestProductInSeries(13, series)


